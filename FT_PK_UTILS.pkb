CREATE OR REPLACE PACKAGE BODY FT_PK_UTILS AS

  cVersionControlNo   VARCHAR2(12) := '1.0.0'; -- Current Version Number

  FUNCTION CURRENTVERSION RETURN VARCHAR2
  IS
  BEGIN
     RETURN cVersionControlNo;
  END CURRENTVERSION;

  PROCEDURE GET_SYSPREFS(SYSPREFS_INOUT IN OUT SYS_PREFS)
  IS
    PARAMETER_LIST      FT_PK_STRING_UTILS.TYPE_STRING_TOKENS;
    L_SYSPREFNAME       WIZSYSPREF.SYSPREFNAME%TYPE;
  BEGIN
    L_SYSPREFNAME := SYSPREFS_INOUT.FIRST;
    WHILE L_SYSPREFNAME IS NOT NULL LOOP
      PARAMETER_LIST('#PARAMNAME') := L_SYSPREFNAME;
      PARAMETER_LIST('#PARAMVALUE') := NULL;

      SELECT UPPER(WIZSYSPREF.SYSPREFVALUE)
      INTO SYSPREFS_INOUT(L_SYSPREFNAME)
      FROM WIZSYSPREF
      WHERE UPPER(TRIM(WIZSYSPREF.SYSPREFNAME)) = UPPER(L_SYSPREFNAME);

      L_SYSPREFNAME := SYSPREFS_INOUT.NEXT(L_SYSPREFNAME);
    END LOOP;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      FT_PK_ERRORS.RAISE_ERROR(FT_PK_ERRNUMS.FT_PARAMETER, PARAMETER_LIST);
    WHEN OTHERS THEN
      FT_PK_ERRORS.LOG_AND_STOP;
  END GET_SYSPREFS;

  FUNCTION GET_SYSPREF(SYSPREFNAME_IN VARCHAR2) RETURN WIZSYSPREF.SYSPREFVALUE%TYPE
  IS
    PARAMETER_LIST      FT_PK_STRING_UTILS.TYPE_STRING_TOKENS;
    L_SYSPREFS          SYS_PREFS;
  BEGIN
    IF SYSPREFNAME_IN IS NULL THEN
      PARAMETER_LIST('#PARAMNAME') := 'SYSPREFNAME_IN';
      PARAMETER_LIST('#PARAMVALUE') := TO_CHAR(SYSPREFNAME_IN);
      FT_PK_ERRORS.RAISE_ERROR(FT_PK_ERRNUMS.FT_PARAMETER, PARAMETER_LIST);
    END IF;

    L_SYSPREFS(SYSPREFNAME_IN) := NULL;
    GET_SYSPREFS(L_SYSPREFS);

    RETURN L_SYSPREFS(SYSPREFNAME_IN);
  EXCEPTION
    WHEN OTHERS THEN
      FT_PK_ERRORS.LOG_AND_STOP;
  END GET_SYSPREF;

END FT_PK_UTILS;
/
